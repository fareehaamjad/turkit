
-------------------------------
version 0.1.31

- Fixed show-stopping bug in version 0.1.30, which apparently can't even run.

- bug fix: if the most recently loaded file has been deleted,
	TurKit will now default to the directory that it was in.

-------------------------------
version 0.1.30

- Loading the TurKit jar now asks you to open a JavaScript file.
	This JavaScript file will have properties associated with it,
	including the AWS access identifiers, and the current mode.
	You may set these parameters at any time,
	and they will take effect when the JavaScript file is re-executed.
	
- added menu bar with save, and tools for deleting HITs

- bug fix: reset database now removes HITs regardless of which mode they were created in
	(it knows which mode (sandbox or real) each HIT was created in,
	and it switches to that mode before deleting it, for each HIT)
	
- quitting will ask if you want to save

- bug fix: maxMoney and maxHITs are now adjustable (the values in the properties file were ignored before)

- "Reset Database" now creates a backup copy of the database before deleting it.
	this file will look something like: mycode.js.database.old2

- there are now 3 different modes:
	 * "offline" will not let you access MTurk or S3. (Good for using after an experiment is completed, and all the data is in the database)
	 * "sandbox" will let you access the MTurk sandbox, and the real S3.
	 * "real" mode accesses the real MTurk and the real S3.

- Java API change:
	- it is now possible to "reinit" the TurKit object with new parameters,
		this function will only re-initialize what is necessary based on which parameters are different from before.
		This features allows the GUI to change the mode without restarting,
		in fact, the mode may be changed programmatically using the "setMode" function in JavaScript

- JavaScript API change:
	- added "setMode" function (you probably don't want to use this, it is mainly used internally)

-------------------------------
version 0.1.29

- Java API change: TurKit.runOnce now accepts different parameters.

- JavaScript API change:
	- new "slurp" function which accepts a filename/path and returns the file contents as a string 
	- MTurk.vote now returns an additional parameter: the hit as it looked right before it was deleted

- highlightDiff moved from turkit.js to util.js (no effect visible to users, except in documentation)

- bug fix: now able to load database files of arbitrary size.
	It used to be that TurKit could not reload the database for some TurKit programs,
	if they were too large.
	
- minor bug fixes:
	- task-template.html now disables buttons as well as inputs and textareas
	- fixed problem when reseting database if no HITs had been created
	- fixed bug in mturk.deleteHITRaw, triggered when deleting a HITs where some assignments had been approved already

-------------------------------
version 0.1.27-test

- TurKit now tries to notice when you call "once" functions out of order.
	This should help catch cases where you edit your program in "illegal" ways,
	that get the program execution out of step with the memoized execution trace.

- printed messages, like "hit created" are now shown every time the program is run.
	This means you will still have access to that url that it shows,
	even if you re-run the program.

-------------------------------
version 0.1.26-test


- "Reset Database" now deletes all the HITs and S3 Objects associated with the database.
	In particular, any time you call mturk.createHIT or s3.putObject in a TurKit program,
	the HIT Id or S3 Object URL is stored in the database,
	and when the database is reset, all of these HITs and S3 Objects are removed.

- new function mturk.deleteHITRaw
- the deleteHIT functions now work better -- in general, they will always succeed at deleting the HIT,
	no matter what state it is in, even if turkers are currently working on assignments for the HIT.
	Note that all assignments that haven't been rejected for the HIT will be approved
	(this is consistent with the previous behavior).

- deleteHIT now removes the HIT from "__HITs" in the database
- "Delete HITs" button changed to "Delete All HITs" (performs same function)
- the global value "__HITs" in the database is now an object (each key is a HIT Id), as opposed to an Array

- when S3 objects are created or deleted, the new "__S3_Objects" variable in the database is updated.
	It stores the URLs for each S3 Object as a key.
	
- new function s3.getURL, useful for constructing an S3 URL based on a bucket name and a key

-------------------------------
version 0.1.25

- this was the version when the change log was created
